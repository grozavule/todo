$(() => {
    /** VARIABLE DECLARATIONS **/
    const mainContentArea = document.querySelector("#main-content");
    const taskList = document.querySelector("#tasks");
    const taskCheckboxes = document.querySelectorAll("input[data-task-id]");

    /** FUNCTION DECLARATIONS **/
    const displayAlert = (type, message) => {
        let alert = document.createElement("div");
        alert.classList.add("alert", `alert-${type}`);
        alert.textContent = message;

        mainContentArea.insertBefore(alert, taskList);
    }

    const handleCheckbox = (e) => {
        let checkbox = e.currentTarget;
        let taskId = checkbox.getAttribute('data-task-id');

        $.ajax({
            url: `/tasks/${taskId}/complete`,
            type: "post",
            data: { is_checked: checkbox.checked },
            success: (result) => {
                if(result.status == "completed"){
                    checkbox.parentElement.closest("tr").classList.add('task-completed');
                } else {
                    checkbox.parentElement.closest("tr").classList.remove('task-completed');
                }
                displayAlert("success", result.notice);
            },
            error: (xhr, status, error) => {
                displayAlert("danger", `${status}: ${error}`);
            }
        });
    }

    $(".table tbody").sortable({
        items: ".task-row",
        placeholder: "ui-state-highlight",
        helper: "clone",
        dropOnEmpty: true,
        forcePlaceholderSize: true,
        update: function() {
            let newIndexOrder = $(this).sortable("toArray", {attribute: "data-task-id"});
            $.ajax({
               url: "/tasks/priority",
               type: "post",
               data: { new_index_order: newIndexOrder },
               success: (result) => {
                   console.log(result);
                   displayAlert("success", "Task priorities have been updated successfully.");
               },
               error: (xhr, status, error) => {
                   console.log(status, error);
                   displayAlert("danger", `${status}: ${error}`);
               }
            });
        }
    }).disableSelection();

    /** EVENT LISTENERS **/
    taskCheckboxes.forEach((checkbox) => {
        checkbox.addEventListener("click", handleCheckbox);
    });
});